// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherForecast.Api.Infrastructure;

namespace WeatherForecast.Api.Infrastructure.Migrations
{
    [DbContext(typeof(WeatherForecastDbContext))]
    [Migration("20200825223616_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("WeatherForecast.Api.Infrastructure.Entity.WeatherForecastDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AirPressure")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ApplicableDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Humidity")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MaxTemp")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MinTemp")
                        .HasColumnType("TEXT");

                    b.Property<int>("Predictability")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TheTemp")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Visibility")
                        .HasColumnType("TEXT");

                    b.Property<int>("WeatherForecastLocationId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("WeatherId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WeatherStateAbbr")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.Property<string>("WeatherStateName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.Property<decimal>("WindDirection")
                        .HasColumnType("TEXT");

                    b.Property<string>("WindDirectionCompass")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.Property<decimal>("WindSpeed")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WeatherForecastLocationId");

                    b.ToTable("WeatherForecastDays");
                });

            modelBuilder.Entity("WeatherForecast.Api.Infrastructure.Entity.WeatherForecastLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LatLong")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocationType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("Sunrise")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Sunset")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<string>("TimezoneName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<int>("WoEId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("WeatherForecastLocations");
                });

            modelBuilder.Entity("WeatherForecast.Api.Infrastructure.Entity.WeatherForecastDay", b =>
                {
                    b.HasOne("WeatherForecast.Api.Infrastructure.Entity.WeatherForecastLocation", null)
                        .WithMany("WeatherForecastDays")
                        .HasForeignKey("WeatherForecastLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
